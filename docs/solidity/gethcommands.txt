
------ dev network command -----------

geth --dev console

geth --datadir "./data-dev" --dev attach "\\.\pipe\geth.ipc"


geth --rpc --rpcaddr localhost --rpcport "8545" --rpccorsdomain "*" --datadir "./data-dev" --dev console

---------- test network command -------

geth --identity "MyTestNode" --datadir "./data" --testnet --fast
geth --identity "MyTestNode" --datadir "./data" --trace "./log" --testnet --fast


-----------------------------------------

Geth: setting up RPC for geth client





------------------------------------------------------------------------------------
C:\Users\Development\Desktop\Ethereum\geth>geth --datadir gethdatadir init genesis.json
Fatal: invalid genesis file: missing required field 'alloc' for Genesis

C:\Users\Development\Desktop\Ethereum\geth>geth --datadir gethdatadir init genesis.json
WARN [10-25|22:46:49] No etherbase set and no accounts found as default
INFO [10-25|22:46:49] Allocated cache and file handles         database=C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\geth\\chaindata cache=16 handles=16
Fatal: Failed to write genesis block: genesis has no chain configuration

C:\Users\Development\Desktop\Ethereum\geth>geth --datadir gethdatadir init genesis.json
WARN [10-25|22:48:24] No etherbase set and no accounts found as default
INFO [10-25|22:48:24] Allocated cache and file handles         database=C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\geth\\chaindata cache=16 handles=16
INFO [10-25|22:48:24] Writing custom genesis block
INFO [10-25|22:48:24] Successfully wrote genesis state         database=chaindata                                                                     hash=d94a00…82fea9
INFO [10-25|22:48:24] Allocated cache and file handles         database=C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\geth\\lightchaindata cache=16 handles=16
INFO [10-25|22:48:24] Writing custom genesis block
INFO [10-25|22:48:24] Successfully wrote genesis state         database=lightchaindata                                                                     hash=d94a00…82fea9

C:\Users\Development\Desktop\Ethereum\geth>ls
'ls' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Development\Desktop\Ethereum\geth>dir
 Volume in drive C is OS
 Volume Serial Number is 2C5C-9C98

 Directory of C:\Users\Development\Desktop\Ethereum\geth

10/25/2017  10:46 PM    <DIR>          .
10/25/2017  10:46 PM    <DIR>          ..
10/25/2017  10:48 PM               408 genesis.json
10/25/2017  10:46 PM    <DIR>          gethdatadir
               1 File(s)            408 bytes
               3 Dir(s)   6,201,741,312 bytes free

C:\Users\Development\Desktop\Ethereum\geth>geth --datadir gethdatadir --networkid 301 console
WARN [10-25|22:52:06] No etherbase set and no accounts found as default
INFO [10-25|22:52:06] Starting peer-to-peer node               instance=Geth/v1.7.2-stable-1db4ecdc/windows-amd64/go1.9
INFO [10-25|22:52:06] Allocated cache and file handles         database=C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\geth\\chaindata cache=128 handles=1024
WARN [10-25|22:52:06] Upgrading database to use lookup entries
INFO [10-25|22:52:06] Initialised chain configuration          config="{ChainID: <nil> Homestead: <nil> DAO: <nil> DAOSupport: false EIP150: <nil> EIP155: <nil> EIP158: <nil> Byzantium: <nil> Engine: unknown}"
INFO [10-25|22:52:06] Disk storage enabled for ethash caches   dir=C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\geth\\ethash count=3
INFO [10-25|22:52:06] Database deduplication successful        deduped=0
INFO [10-25|22:52:06] Disk storage enabled for ethash DAGs     dir=C:\\Users\\Development\\AppData\\Ethash                                    count=2
INFO [10-25|22:52:06] Initialising Ethereum protocol           versions="[63 62]" network=301
INFO [10-25|22:52:06] Loaded most recent local header          number=0 hash=d94a00…82fea9 td=17179869184
INFO [10-25|22:52:06] Loaded most recent local full block      number=0 hash=d94a00…82fea9 td=17179869184
INFO [10-25|22:52:06] Loaded most recent local fast block      number=0 hash=d94a00…82fea9 td=17179869184
INFO [10-25|22:52:06] Regenerated local transaction journal    transactions=0 accounts=0
INFO [10-25|22:52:06] Starting P2P networking
INFO [10-25|22:52:08] UDP listener up                          self=enode://8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2@172.17.177.166:30303
INFO [10-25|22:52:08] RLPx listener up                         self=enode://8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2@172.17.177.166:30303
INFO [10-25|22:52:09] IPC endpoint opened: \\.\pipe\geth.ipc
INFO [10-25|22:52:09] Mapped network port                      proto=udp extport=30303 intport=30303 interface="UPNP IGDv1-IP1"
Welcome to the Geth JavaScript console!

instance: Geth/v1.7.2-stable-1db4ecdc/windows-amd64/go1.9
 modules: admin:1.0 debug:1.0 eth:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0

INFO [10-2> 5|22:52:09] Mapped network port                      proto=tcp extport=30303 intport=30303 interface="UPNP IGDv1-IP1"
> admin.nodeInfo
{
  enode: "enode://8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2@172.17.177.166:30303",
  id: "8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2",
  ip: "172.17.177.166",
  listenAddr: "[::]:30303",
  name: "Geth/v1.7.2-stable-1db4ecdc/windows-amd64/go1.9",
  ports: {
    discovery: 30303,
    listener: 30303
  },
  protocols: {
    eth: {
      difficulty: 17179869184,
      genesis: "0xd94a0026d9c1de55719a5178e547dc146e484242a62b32bd0629dd756982fea9",
      head: "0xd94a0026d9c1de55719a5178e547dc146e484242a62b32bd0629dd756982fea9",
      network: 301
    }
  }
}
> personal.newAccount('1111')
"0xc9c14e74e8bc78148ce93f6a6f605b7166231774"
> personal.newAccount('0000')
"0xfc25854a71c5261d8f4f1067c7ec92e3468fca5c"
> eth.accounts
["0xc9c14e74e8bc78148ce93f6a6f605b7166231774", "0xfc25854a71c5261d8f4f1067c7ec92e3468fca5c"]
> web3
{
  admin: {
    datadir: "C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir",
    nodeInfo: {
      enode: "enode://8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2@172.17.177.166:30303",
      id: "8d2eae2a1adcc66b0b383b9227f60ab0f427c48d8a5a0e03655b3b3470ee872ff841068292971652ec2df6e9fd97a8bfad4495280b12c719ece14468602c40c2",
      ip: "172.17.177.166",
      listenAddr: "[::]:30303",
      name: "Geth/v1.7.2-stable-1db4ecdc/windows-amd64/go1.9",
      ports: {
        discovery: 30303,
        listener: 30303
      },
      protocols: {
        eth: {...}
      }
    },
    peers: [],
    addPeer: function(),
    exportChain: function(),
    getDatadir: function(callback),
    getNodeInfo: function(callback),
    getPeers: function(callback),
    importChain: function(),
    removePeer: function(),
    sleep: function github.com/ethereum/go-ethereum/console.(*bridge).Sleep-fm(),
    sleepBlocks: function github.com/ethereum/go-ethereum/console.(*bridge).SleepBlocks-fm(),
    startRPC: function(),
    startWS: function(),
    stopRPC: function(),
    stopWS: function()
  },
  bzz: {
    hive: undefined,
    info: undefined,
    blockNetworkRead: function(),
    download: function(),
    get: function(),
    getHive: function(callback),
    getInfo: function(callback),
    modify: function(),
    put: function(),
    retrieve: function(),
    store: function(),
    swapEnabled: function(),
    syncEnabled: function(),
    upload: function()
  },
  currentProvider: {
    newAccount: function(),
    openWallet: function(),
    send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
    sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
    sign: function(),
    unlockAccount: function()
  },
  db: {
    getHex: function(),
    getString: function(),
    putHex: function(),
    putString: function()
  },
  debug: {
    backtraceAt: function(),
    blockProfile: function(),
    chaindbCompact: function(),
    chaindbProperty: function(),
    cpuProfile: function(),
    dumpBlock: function(),
    freeOSMemory: function(),
    gcStats: function(),
    getBadBlocks: function(),
    getBlockRlp: function(),
    goTrace: function(),
    memStats: function(),
    metrics: function(),
    preimage: function(),
    printBlock: function(),
    seedHash: function(),
    setBlockProfileRate: function(),
    setGCPercent: function(),
    setHead: function(),
    stacks: function(),
    startCPUProfile: function(),
    startGoTrace: function(),
    stopCPUProfile: function(),
    stopGoTrace: function(),
    storageRangeAt: function(),
    traceBlock: function(),
    traceBlockByHash: function(),
    traceBlockByNumber: function(),
    traceBlockFromFile: function(),
    traceTransaction: function(),
    verbosity: function(),
    vmodule: function(),
    writeBlockProfile: function(),
    writeMemProfile: function()
  },
  eth: {
    accounts: ["0xc9c14e74e8bc78148ce93f6a6f605b7166231774", "0xfc25854a71c5261d8f4f1067c7ec92e3468fca5c"],
    blockNumber: 0,
    coinbase: "0xc9c14e74e8bc78148ce93f6a6f605b7166231774",
    compile: {
      lll: function(),
      serpent: function(),
      solidity: function()
    },
    defaultAccount: undefined,
    defaultBlock: "latest",
    gasPrice: 18000000000,
    hashrate: 0,
    mining: false,
    pendingTransactions: [],
    protocolVersion: "0x3f",
    syncing: false,
    call: function(),
    contract: function(abi),
    estimateGas: function(),
    filter: function(options, callback, filterCreationErrorCallback),
    getAccounts: function(callback),
    getBalance: function(),
    getBlock: function(),
    getBlockNumber: function(callback),
    getBlockTransactionCount: function(),
    getBlockUncleCount: function(),
    getCode: function(),
    getCoinbase: function(callback),
    getCompilers: function(),
    getGasPrice: function(callback),
    getHashrate: function(callback),
    getMining: function(callback),
    getPendingTransactions: function(callback),
    getProtocolVersion: function(callback),
    getRawTransaction: function(),
    getRawTransactionFromBlock: function(),
    getStorageAt: function(),
    getSyncing: function(callback),
    getTransaction: function(),
    getTransactionCount: function(),
    getTransactionFromBlock: function(),
    getTransactionReceipt: function(),
    getUncle: function(),
    getWork: function(),
    iban: function(iban),
    icapNamereg: function(),
    isSyncing: function(callback),
    namereg: function(),
    resend: function(),
    sendIBANTransaction: function(),
    sendRawTransaction: function(),
    sendTransaction: function(),
    sign: function(),
    signTransaction: function(),
    submitTransaction: function(),
    submitWork: function()
  },
  isIBAN: undefined,
  miner: {
    getHashrate: function(),
    setEtherbase: function(),
    setExtra: function(),
    setGasPrice: function(),
    start: function(),
    stop: function()
  },
  net: {
    listening: true,
    peerCount: 0,
    version: "301",
    getListening: function(callback),
    getPeerCount: function(callback),
    getVersion: function(callback)
  },
  personal: {
    listAccounts: ["0xc9c14e74e8bc78148ce93f6a6f605b7166231774", "0xfc25854a71c5261d8f4f1067c7ec92e3468fca5c"],
    listWallets: [{
        accounts: [...],
        status: "Locked",
        url: "keystore://C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\keystore\\UTC--2017-10-25T17-23-22.434584300Z--c9c14e74e8bc78148ce93f6a6f605b7166231774"
    }, {
        accounts: [...],
        status: "Locked",
        url: "keystore://C:\\Users\\Development\\Desktop\\Ethereum\\geth\\gethdatadir\\keystore\\UTC--2017-10-25T17-23-59.888511200Z--fc25854a71c5261d8f4f1067c7ec92e3468fca5c"
    }],
    deriveAccount: function(),
    ecRecover: function(),
    getListAccounts: function(callback),
    getListWallets: function(callback),
    importRawKey: function(),
    lockAccount: function(),
    newAccount: function github.com/ethereum/go-ethereum/console.(*bridge).NewAccount-fm(),
    openWallet: function github.com/ethereum/go-ethereum/console.(*bridge).OpenWallet-fm(),
    sendTransaction: function(),
    sign: function github.com/ethereum/go-ethereum/console.(*bridge).Sign-fm(),
    unlockAccount: function github.com/ethereum/go-ethereum/console.(*bridge).UnlockAccount-fm()
  },
  providers: {
    HttpProvider: function(host, timeout, user, password),
    IpcProvider: function(path, net)
  },
  rpc: {
    modules: {
      admin: "1.0",
      debug: "1.0",
      eth: "1.0",
      miner: "1.0",
      net: "1.0",
      personal: "1.0",
      rpc: "1.0",
      txpool: "1.0",
      web3: "1.0"
    },
    getModules: function(callback)
  },
  settings: {
    defaultAccount: undefined,
    defaultBlock: "latest"
  },
  shh: {
    addPrivateKey: function(),
    addSymKey: function(),
    deleteKeyPair: function(),
    deleteSymKey: function(),
    generateSymKeyFromPassword: function(),
    getPrivateKey: function(),
    getPublicKey: function(),
    getSymKey: function(),
    hasKeyPair: function(),
    hasSymKey: function(),
    info: function(),
    markTrustedPeer: function(),
    newKeyPair: function(),
    newMessageFilter: function(options, callback, filterCreationErrorCallback),
    newSymKey: function(),
    post: function(),
    setMaxMessageSize: function(),
    setMinPoW: function(),
    version: function()
  },
  txpool: {
    content: {
      pending: {},
      queued: {}
    },
    inspect: {
      pending: {},
      queued: {}
    },
    status: {
      pending: 0,
      queued: 0
    },
    getContent: function(callback),
    getInspect: function(callback),
    getStatus: function(callback)
  },
  version: {
    api: "0.20.1",
    ethereum: "0x3f",
    network: "301",
    node: "Geth/v1.7.2-stable-1db4ecdc/windows-amd64/go1.9",
    whisper: undefined,
    getEthereum: function(callback),
    getNetwork: function(callback),
    getNode: function(callback),
    getWhisper: function(callback)
  },
  BigNumber: function a(e,n),
  createBatch: function(),
  fromAscii: function(str),
  fromDecimal: function(value),
  fromICAP: function(icap),
  fromUtf8: function(str),
  fromWei: function(number, unit),
  isAddress: function(address),
  isChecksumAddress: function(address),
  isConnected: function(),
  padLeft: function(string, chars, sign),
  padRight: function(string, chars, sign),
  reset: function(keepIsSyncing),
  setProvider: function(provider),
  sha3: function(string, options),
  toAscii: function(hex),
  toBigNumber: function(number),
  toChecksumAddress: function(address),
  toDecimal: function(value),
  toHex: function(val),
  toUtf8: function(hex),
  toWei: function(number, unit)
}
>